{"version":3,"file":"static/js/37.5d5c8515.chunk.js","mappings":"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","sources":["components/Profile/profile-selectors.ts","components/Profile/MyPosts/posts-selectors.ts","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?e370","components/Profile/MyPosts/Post/Post.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?42be","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","webpack://samurai-way/./src/components/Profile/Profile.module.css?c3df","webpack://samurai-way/./src/components/Profile/ProfileStatus/ProfileStatus.module.css?77f1","components/Profile/ProfileStatus/ProfileStatus.tsx","webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?962c","webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileForm/ProfileForm.module.css?5420","components/Profile/ProfileInfo/ProfileForm/ProfileForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","webpack://samurai-way/./src/components/Users/User/User.module.css?f1af","components/Users/User/User.tsx","webpack://samurai-way/./src/components/Users/Users.module.css?e91c","components/Users/Users.tsx","components/Users/users-selectors.ts"],"sourcesContent":["import {RootState} from '../../redux/reduxStore';\r\n\r\nexport const getProfile = (state: RootState) => {\r\n    return state.profileReducer\r\n}\r\nexport const getUserId = (state: RootState) => {\r\n    return state.authReducer.id\r\n}\r\nexport const getProfileError = (state: RootState) => {\r\n    return state.profileReducer.error\r\n}\r\n","import {RootState} from '../../../redux/reduxStore';\r\n\r\nexport const getPosts = (state: RootState) => {\r\n    return state.profileReducer.posts\r\n}\r\nexport const getTextArea = (state: RootState) => {\r\n    return state.profileReducer.textArea\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"userImage\":\"Post_userImage__6SSHs\",\"postContainer\":\"Post_postContainer__mSOQK\"};","import React from 'react';\r\nimport user from '../../../../assets/img/user.png'\r\n\r\nimport s from './Post.module.css'\r\n\r\ntype PostProps = {\r\n    text: string | undefined\r\n}\r\n\r\nexport const Post: React.FC<PostProps> = ({text}) => {\r\n    return (\r\n        <div className={s.postContainer}>\r\n            <img className={s.userImage} src={user} alt=\"user logo\"/>\r\n            <span>{text}</span>\r\n        </div>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsForm\":\"MyPosts_postsForm__nL4NQ\"};","import React from 'react';\r\nimport {PostType,} from '../../../redux/state';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {maxLength, minLength, required, Textarea} from '../../common/FormControls/FormControls';\r\nimport {Button} from '../../common';\r\nimport {Post} from './Post/Post';\r\n\r\nimport s from './MyPosts.module.css'\r\n\r\nconst maxLength100 = maxLength(100);\r\nconst minLength2 = minLength(2)\r\n\r\nexport const MyPosts: React.FC<MyPostsProps> = ({ addPostHandler, posts }) => {\r\n\r\n    const postsRender = posts.map((item) => {\r\n        return <Post key={item.id} text={item.text}/>\r\n    })\r\n\r\n    const onAddPost = (formData: FormDataType) => {\r\n        addPostHandler(formData.post)\r\n        formData.post = ''\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={onAddPost}/>\r\n            <div>\r\n                {postsRender}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AddPostForm = (props: InjectedFormProps<FormDataType>) => {\r\n    const {handleSubmit} = props;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.postsForm}>\r\n            <div>\r\n                <Field\r\n                    name=\"post\"\r\n                    component={Textarea}\r\n                    label=\"Add new post\"\r\n                    placeholder={\"Add new post...\"}\r\n                    validate={[required, maxLength100, minLength2]}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <Button>Add post</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm<FormDataType, {}>({\r\n    form: 'post'\r\n})(AddPostForm)\r\n\r\ntype MyPostsProps = {\r\n    addPostHandler: (post: string) => void\r\n    posts: PostType[]\r\n    textarea: string\r\n}\r\n\r\ntype FormDataType = {\r\n    post: string\r\n}\r\n\r\n","import React from 'react';\r\nimport {addPostAC} from '../../../redux';\r\nimport {AppDispatch, RootState} from '../../../redux/reduxStore';\r\nimport {connect} from 'react-redux';\r\nimport {PostType} from '../../../redux/state';\r\nimport {getPosts, getTextArea} from './posts-selectors';\r\nimport {MyPosts} from './MyPosts';\r\n\r\nconst MyPostsContainer: React.FC<MyPostsContainerProps> = ({posts, textarea, addPostHandler}) => {\r\n\r\n    return (\r\n        <MyPosts\r\n            addPostHandler={addPostHandler}\r\n            posts={posts}\r\n            textarea={textarea}\r\n        />\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): MapStateToPropsType => {\r\n    return {\r\n        posts: getPosts(state),\r\n        textarea: getTextArea(state),\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addPostHandler: (post: string) => dispatch(addPostAC(post)),\r\n    }\r\n}\r\n\r\ntype MyPostsContainerProps = {\r\n    posts: PostType[]\r\n    textarea: string\r\n    addPostHandler: (post: string) => void\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    posts: PostType[]\r\n    textarea: string\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addPostHandler: (post: string) => void\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPostsContainer);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Profile_main__H5hgO\",\"content\":\"Profile_content__eXTVx\",\"leftContent\":\"Profile_leftContent__iluJ4\",\"avatar\":\"Profile_avatar__3EsM6\",\"rightContent\":\"Profile_rightContent__4TrS6\",\"upload\":\"Profile_upload__QZwiz\",\"uploadIcon\":\"Profile_uploadIcon__z0fIo\",\"uploadContainer\":\"Profile_uploadContainer__JHJZ0\"};","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"ProfileStatus_status__uFXVF\",\"input\":\"ProfileStatus_input__2Aaq0\"};","import React, {useState} from 'react';\r\n\r\nimport s from './ProfileStatus.module.css'\r\n\r\nexport const ProfileStatus: React.FC<PropsType> = ({status, changeStatus}) => {\r\n    const [editable, setEditable] = useState(false);\r\n    const [value, setValue] = useState(status);\r\n\r\n    const onBlurHandler = () => {\r\n        setEditable(false);\r\n        changeStatus(value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !editable\r\n                    ? <span\r\n                        className={s.status}\r\n                        onClick={() => setEditable(true)}\r\n                    >Status: {status || 'No status 😢'}</span>\r\n                    : <input\r\n                        className={s.input}\r\n                        type=\"text\"\r\n                        value={value}\r\n                        onBlur={onBlurHandler}\r\n                        onChange={(e) => setValue(e.currentTarget.value)}\r\n                        autoFocus\r\n                    />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\ntype PropsType = {\r\n    status: string\r\n    changeStatus: (statusValue: string) => void\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__d-KmL\",\"profileWrapper\":\"ProfileInfo_profileWrapper__IKFcn\",\"spanItem\":\"ProfileInfo_spanItem__BL7Hj\",\"contentList\":\"ProfileInfo_contentList__tnevZ\",\"listItem\":\"ProfileInfo_listItem__cRNmZ\",\"spanText\":\"ProfileInfo_spanText__3Nvn3\",\"contentItem\":\"ProfileInfo_contentItem__4EDAc\",\"listElement\":\"ProfileInfo_listElement__e3XxD\",\"listElementSpan\":\"ProfileInfo_listElementSpan__vd0+R\",\"profileBtnIcon\":\"ProfileInfo_profileBtnIcon__-LGwF\",\"profileHeader\":\"ProfileInfo_profileHeader__Xwxo1\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"ProfileForm_input__go1Z1\",\"checked\":\"ProfileForm_checked__esvds\",\"text\":\"ProfileForm_text__wEBFW\",\"button\":\"ProfileForm_button__PqQo7\",\"span1\":\"ProfileForm_span1__EQIpk\",\"span2\":\"ProfileForm_span2__H2RxA\",\"span3\":\"ProfileForm_span3__8-332\",\"span4\":\"ProfileForm_span4__zGpzF\"};","import { useForm, SubmitHandler } from \"react-hook-form\";\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\n\r\nimport s from './ProfileForm.module.css'\r\nimport {Button} from '../../../common';\r\nimport {useAppDispatch} from '../../../../redux';\r\nimport {setProfileThunk} from '../../../../redux';\r\nimport React from 'react';\r\n\r\nconst URL = /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\r\n\r\nconst schema = yup.object({\r\n    name: yup.string().required(),\r\n    aboutMe: yup.string().required(),\r\n    lookingForAJobDescription: yup.string().required(),\r\n    lookingForAJob: yup.boolean().required(),\r\n    facebook: yup.string().matches( URL, 'Enter correct facebook url!').required('Please enter facebook url'),\r\n    website: yup.string().matches( URL, 'Enter correct website url!').required('Please enter website url'),\r\n    vk: yup.string().matches( URL, 'Enter correct vk url!').required('Please enter vk url'),\r\n    twitter: yup.string().matches( URL, 'Enter correct twitter url!').required('Please enter twitter url'),\r\n    instagram: yup.string().matches( URL, 'Enter correct instagram url!').required('Please enter instagram url'),\r\n    youtube: yup.string().matches( URL, 'Enter correct youtube url!').required('Please enter youtube url'),\r\n    github: yup.string().matches( URL, 'Enter correct github url!').required('Please enter github url'),\r\n    mainLink: yup.string().matches( URL, 'Enter correct mainLink url!').required('Please enter mainLink url'),\r\n}).required();\r\n\r\nexport const ProfileForm: React.FC<Props> = ({ userId, setEditable }) => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm<Inputs>({\r\n        // @ts-ignore\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n\r\n    const onSubmit: SubmitHandler<Inputs> = data => {\r\n        // @ts-ignore\r\n        dispatch(setProfileThunk({\r\n            lookingForAJob: data.lookingForAJob,\r\n            fullName: data.name,\r\n            userId: +userId,\r\n            aboutMe: data.aboutMe,\r\n            lookingForAJobDescription: data.lookingForAJobDescription,\r\n            contacts: {\r\n                youtube: data.youtube,\r\n                vk: data.vk,\r\n                website: data.website,\r\n                twitter: data.twitter,\r\n                mainLink: data.mainLink,\r\n                github: data.github,\r\n                instagram: data.instagram,\r\n                facebook: data.facebook\r\n            }\r\n        }, String(userId)))\r\n\r\n        setEditable(false)\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input placeholder={'Name...'} className={s.input} {...register(\"name\")} /> <br/>\r\n            <p className={s.text}>{errors.name?.message}</p>\r\n\r\n            <input placeholder={'About me...'} className={s.input} {...register(\"aboutMe\")}  /> <br/>\r\n            <p className={s.text}>{errors.aboutMe?.message}</p>\r\n\r\n            <input placeholder={'Looking for a job description...'} className={s.input} {...register(\"lookingForAJobDescription\", {})} /> <br/>\r\n            <p className={s.text}>{errors.lookingForAJobDescription?.message}</p>\r\n\r\n            <input placeholder={'Facebook...'} className={s.input} {...register(\"facebook\", {})} /> <br/>\r\n            <p className={s.text}>{errors.facebook?.message}</p>\r\n\r\n            <input placeholder={'Website...'} className={s.input} {...register(\"website\", {})} /> <br/>\r\n            <p className={s.text}>{errors.website?.message}</p>\r\n\r\n            <input placeholder={'Vk...'} className={s.input} {...register(\"vk\", {})} /> <br/>\r\n            <p className={s.text}>{errors.vk?.message}</p>\r\n\r\n            <input placeholder={'Instagram...'} className={s.input} {...register(\"instagram\", {})} /> <br/>\r\n            <p className={s.text}>{errors.instagram?.message}</p>\r\n\r\n            <input placeholder={'Youtube...'} className={s.input} {...register(\"youtube\", {})} /> <br/>\r\n            <p className={s.text}>{errors.youtube?.message}</p>\r\n\r\n            <input placeholder={'Github...'} className={s.input} {...register(\"github\", {})} /> <br/>\r\n            <p className={s.text}>{errors.github?.message}</p>\r\n\r\n            <input placeholder={'Twitter...'} className={s.input} {...register(\"twitter\", {})} /> <br/>\r\n            <p className={s.text}>{errors.twitter?.message}</p>\r\n\r\n            <input placeholder={'MainLink...'} className={s.input} {...register(\"mainLink\", {})} /> <br/>\r\n            <p className={s.text}>{errors.mainLink?.message}</p>\r\n\r\n            <span>Looking for a job: </span>\r\n            <input {...register(\"lookingForAJob\", {})} className={s.checked} type={'checkbox'}  /> <br/>\r\n            <p className={s.text}>{errors.lookingForAJob?.message}</p>\r\n\r\n            <Button type={'submit'}>Send</Button>\r\n        </form>\r\n    );\r\n}\r\n\r\ntype Props = {\r\n    userId: number | string\r\n    setEditable: (value: boolean) => void\r\n}\r\n\r\ntype Inputs = {\r\n    name: string\r\n    aboutMe: string\r\n    lookingForAJob: boolean\r\n    facebook: string\r\n    website: string\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: string\r\n    github: string\r\n    mainLink: string\r\n    lookingForAJobDescription: string\r\n};\r\n\r\ntype FormData = yup.InferType<typeof schema>;\r\n\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {ProfileStateType} from '../../../redux/reducers/profile/profileReducer';\r\n\r\nimport edit from '../../../assets/img/edit.png'\r\nimport {ProfileForm} from './ProfileForm/ProfileForm';\r\n\r\ntype PropsType = {\r\n    state: ProfileStateType\r\n    isOwner: boolean\r\n}\r\n\r\nexport const ProfileInfo: React.FC<PropsType> = ({state, isOwner}) => {\r\n    const [editable, setEditable] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.profileHeader}>\r\n                <h3 className={s.profileInfo}>My profile info: </h3>\r\n                {\r\n                    isOwner && !editable &&\r\n                    <img className={s.profileBtnIcon} src={edit} alt=\"edit\" onClick={() => setEditable(true)}/>\r\n                }\r\n            </div>\r\n\r\n            {\r\n                editable\r\n                    ? <ProfileForm userId={state.userId} setEditable={setEditable} />\r\n                    : <>\r\n                        <div className={s.contentItem}>\r\n                <span className={s.spanItem}>\r\n                    Name:\r\n                    <span className={s.spanText}>{state.fullName ? state.fullName : 'no info 😕'}</span>\r\n                </span>\r\n                        </div>\r\n                        <div className={s.contentItem}>\r\n                <span className={s.spanItem}>\r\n                    About me:\r\n                    <span className={s.spanText}>{state.aboutMe ? state.aboutMe : 'no info 😕'}</span>\r\n                </span>\r\n                        </div>\r\n                        <div className={s.contentItem}>\r\n                <span className={s.spanItem}>\r\n                Looking for a job: <span className={s.spanText}>{state.lookingForAJob ? 'Yes' : 'No'}</span>\r\n                </span>\r\n                        </div>\r\n\r\n                        <div className={s.contentItem}>\r\n                            <ul className={s.contentList}>\r\n                                <span className={s.listItem}>Contacts:</span>\r\n                                {\r\n                                    Object.entries(state.contacts).map((item, index) => {\r\n                                        return (\r\n                                            <li key={index} className={s.listElement}>\r\n                                                {item[0]}: <span\r\n                                                className={s.listElementSpan}>{item[1] ? item[1] : 'no info 😕'}</span>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </>\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n","import React, {ChangeEvent} from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport {ProfileStateType} from '../../redux/reducers/profile/profileReducer';\r\n\r\nimport s from './Profile.module.css'\r\nimport image from '../../assets/img/user-avatar.png'\r\nimport upload from '../../assets/img/up-loading.png'\r\nimport {toast} from 'react-toastify';\r\nimport {Preloader} from '../common';\r\nimport {ProfileStatus} from './ProfileStatus/ProfileStatus';\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\n\r\nexport const Profile: React.FC<ProfileProps> = ({state, setUserStatusThunk, setPhotoThunk, isOwner, error, usersError}) => {\r\n    const onChangeHandler = (statusValue: string) => {\r\n        setUserStatusThunk(statusValue);\r\n    }\r\n\r\n    const onLoadHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPhotoThunk(e.currentTarget.files![0])\r\n    }\r\n\r\n    if (error || usersError) {\r\n        if (error) toast.error(error)\r\n        if (usersError) toast.error(usersError)\r\n    }\r\n\r\n    return (\r\n        <div className={s.main}>\r\n            {state.isLoading\r\n                ? <div style={{position: 'fixed', top: '10%', textAlign: 'center', width: '64.6%'}}>\r\n                    <Preloader/>\r\n                </div>\r\n                : <div className={s.content}>\r\n                    <div className={s.leftContent}>\r\n                        <img className={s.avatar} src={state.photos.large ? state.photos.large : image} alt=\"avatar\"/>\r\n                        <ProfileStatus status={state.status} changeStatus={onChangeHandler}/>\r\n                        {\r\n                            isOwner &&\r\n                            <div className={s.uploadContainer}>\r\n                                <input type=\"file\" onChange={onLoadHandler} className={s.upload}/>\r\n                                <img src={upload} alt=\"upload\" className={s.uploadIcon}/>\r\n                            </div>\r\n                        }\r\n\r\n\r\n                        <MyPostsContainer/>\r\n                    </div>\r\n                    <div className={s.rightContent}>\r\n                        <ProfileInfo state={state} isOwner={isOwner}/>\r\n                    </div>\r\n\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\ntype ProfileProps = {\r\n    state: ProfileStateType\r\n    setUserStatusThunk: (status: string) => void\r\n    setPhotoThunk: (photo: File) => void\r\n    isOwner: boolean\r\n    error: string\r\n    usersError: string\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    getUserProfileThunk,\r\n    ProfileStateType,\r\n    setLoadingAC,\r\n    setPhotoThunk,\r\n    updateUserProfileAC\r\n} from '../../redux/reducers/profile/profileReducer';\r\nimport {RootState} from '../../redux/reduxStore';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {GetUserProfileType} from '../../api/api';\r\nimport {withAuthRedirect} from '../../hoc';\r\nimport {compose} from 'redux';\r\nimport {getProfile, getProfileError, getUserId} from './profile-selectors';\r\nimport {getUserStatusThunk, setUserStatusThunk } from '../../redux';\r\nimport {getUsersError} from '../Users';\r\nimport {Profile} from './Profile';\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerProps> {\r\n    componentDidMount() {\r\n        let userId: number | null = +this.props.match.params.userID!;\r\n        if (!userId) {\r\n            userId = this.props.userInfoId;\r\n        }\r\n\r\n        this.props.getUserProfileThunk(String(userId));\r\n        this.props.getUserStatusThunk(String(userId));\r\n    }\r\n    render() {\r\n        return <Profile\r\n            state={this.props.profile}\r\n            setUserStatusThunk={this.props.setUserStatusThunk}\r\n            setPhotoThunk={this.props.setPhotoThunk}\r\n            isOwner={!this.props.match.params.userID}\r\n            error={this.props.error}\r\n            usersError={this.props.usersError}\r\n        />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStateToPropsType => {\r\n    return {\r\n        profile: getProfile(state),\r\n        userInfoId: getUserId(state),\r\n        error: getProfileError(state),\r\n        usersError: getUsersError(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps: MapDispatchToPropsType = {\r\n    updateUserProfile: updateUserProfileAC,\r\n    setLoading: setLoadingAC,\r\n    getUserProfileThunk,\r\n    getUserStatusThunk,\r\n    setUserStatusThunk,\r\n    setPhotoThunk\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    updateUserProfile: (userResponse: GetUserProfileType) => void\r\n    setLoading: (value: boolean) => void\r\n    getUserProfileThunk: (id: string) => void\r\n    getUserStatusThunk: (userId: string | number) => void\r\n    setUserStatusThunk: (status: string) => void\r\n    setPhotoThunk: (photo: File) => void\r\n}\r\ntype MapStateToPropsType = {\r\n    profile: ProfileStateType\r\n    userInfoId: number | null\r\n    error: string\r\n    usersError: string\r\n}\r\ntype PathParamsType = {\r\n    userID: string\r\n}\r\ntype ProfileContainerProps = RouteComponentProps<PathParamsType> & MapDispatchToPropsType & MapStateToPropsType\r\n\r\n//export default withAuthRedirect(connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileContainer)));\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(ProfileContainer)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"userContainer\":\"User_userContainer__K9jgB\",\"userLeft\":\"User_userLeft__UtYY8\",\"userRight\":\"User_userRight__IHEVg\",\"userInfo\":\"User_userInfo__bM-C5\",\"userDesc\":\"User_userDesc__m-6sM\",\"userBtn\":\"User_userBtn__Z3Gun\",\"avatar\":\"User_avatar__rhcaf\"};","import React from 'react';\r\nimport s from './User.module.css';\r\nimport {Link} from 'react-router-dom';\r\nimport user_avatar from '../../../assets/img/user-avatar.png';\r\nimport {UserType} from '../../../redux/reducers/users/usersReducer';\r\n\r\n\r\nexport const User: React.FC<UserPropsType> = ({followUserHandler, unFollowUserHandler, item, followingInProgress}) => {\r\n    return (\r\n        <div key={item.id} className={s.userContainer}>\r\n            <div className={s.userLeft}>\r\n                <Link to={`/profile/${item.id}`}>\r\n                    <img\r\n                        className={s.avatar}\r\n                        src={item.photos.small ? item.photos.small : user_avatar}\r\n                        alt=\"avatar\"\r\n                        width={80}\r\n                        height={80}\r\n                    />\r\n                </Link>\r\n                {item.followed\r\n                    ? <button\r\n                        className={s.userBtn}\r\n                        onClick={() => unFollowUserHandler(item.id)}\r\n                        disabled={followingInProgress.some(id => id === item.id)}\r\n                    >Unfollow</button>\r\n                    : <button\r\n                        className={s.userBtn}\r\n                        onClick={() => followUserHandler(item.id)}\r\n                        disabled={followingInProgress.some(id => id === item.id)}\r\n                    >Follow</button>\r\n                }\r\n            </div>\r\n            <div className={s.userRight}>\r\n                <div className={s.userInfo}>\r\n                    <span>{item.name}</span>\r\n                    <span>{item.status}</span>\r\n                </div>\r\n                <div className={s.userDesc}>\r\n                    <span>{item.uniqueUrlName}</span>\r\n                    <span>{item.id}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype UserPropsType = {\r\n    item: UserType\r\n    followUserHandler: (id: number) => void\r\n    unFollowUserHandler: (id: number) => void\r\n    followingInProgress: number[]\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"usersContainer\":\"Users_usersContainer__Gyh43\"};","import React from 'react';\r\nimport {UserType} from '../../redux/reducers/users/usersReducer';\r\nimport s from './Users.module.css'\r\nimport {Paginator, Preloader} from '../common';\r\nimport {User} from './User/User';\r\nimport {toast} from 'react-toastify';\r\n\r\nexport const Users: React.FC<UsersPropsType> = ({\r\n                                             totalUsersCount,\r\n                                             users,\r\n                                             currentPage,\r\n                                             pageSize,\r\n                                             setCurrentPageHandler,\r\n                                             loading,\r\n                                             followingInProgress,\r\n                                             followUserThunk,\r\n                                             unFollowUserThunk,\r\n                                             error\r\n                                         }) => {\r\n\r\n    if (error) {\r\n        toast.error(error)\r\n    }\r\n\r\n    return (\r\n        <div className={s.usersContainer}>\r\n            <Paginator\r\n                totalUsersCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                setCurrentPageHandler={setCurrentPageHandler}\r\n            />\r\n            {loading\r\n                ? <div style={{position: 'fixed', top: '10%', textAlign: 'center', width: '64.6%'}}>\r\n                    <Preloader/>\r\n                </div>\r\n                : users.map(item => {\r\n                    const followUserHandler = (id: number) => {\r\n                        followUserThunk(id)\r\n                    }\r\n                    const unFollowUserHandler = (id: number) => {\r\n                        unFollowUserThunk(id);\r\n                    }\r\n                    return (\r\n                        <User\r\n                            key={item.id}\r\n                            item={item}\r\n                            followUserHandler={followUserHandler}\r\n                            unFollowUserHandler={unFollowUserHandler}\r\n                            followingInProgress={followingInProgress}\r\n                        />\r\n                    )\r\n                })}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype UsersPropsType = {\r\n    users: UserType[]\r\n    setCurrentPageHandler: (index: number) => void\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    pageSize: number\r\n    loading: boolean\r\n    setFollowingUser: (value: boolean, id: number) => void\r\n    followingInProgress: number[]\r\n    followUserThunk: (id: number) => void\r\n    unFollowUserThunk: (id: number) => void\r\n    error: string\r\n}\r\n","import {RootState} from '../../redux/reduxStore';\r\n\r\nexport const getUsers = (state: RootState) => {\r\n    return state.usersReducer.items\r\n}\r\nexport const getTotalUsersCount = (state: RootState) => {\r\n    return state.usersReducer.totalUsersCount\r\n}\r\nexport const geCurrentPage = (state: RootState) => {\r\n    return state.usersReducer.currentPage\r\n}\r\nexport const getPageSize = (state: RootState) => {\r\n    return state.usersReducer.pageSize\r\n}\r\nexport const getIsLoading = (state: RootState) => {\r\n    return state.usersReducer.isLoading\r\n}\r\nexport const getFollowingInProgress = (state: RootState) => {\r\n    return state.usersReducer.followingInProgress\r\n}\r\nexport const getUsersError = (state: RootState) => {\r\n    return state.usersReducer.error\r\n}\r\n"],"names":["getProfile","state","profileReducer","getUserId","authReducer","id","getProfileError","error","getPosts","posts","getTextArea","textArea","Post","text","className","s","src","user","alt","maxLength100","maxLength","minLength2","minLength","MyPosts","addPostHandler","postsRender","map","item","AddPostReduxForm","onSubmit","formData","post","reduxForm","form","props","handleSubmit","Field","name","component","Textarea","label","placeholder","validate","required","connect","textarea","dispatch","addPostAC","ProfileStatus","status","changeStatus","useState","editable","setEditable","value","setValue","type","onBlur","onChange","e","currentTarget","autoFocus","onClick","URL","schema","yup","aboutMe","lookingForAJobDescription","lookingForAJob","facebook","matches","website","vk","twitter","instagram","youtube","github","mainLink","ProfileForm","userId","useAppDispatch","useForm","resolver","yupResolver","register","errors","watch","formState","data","setProfileThunk","fullName","contacts","String","message","ProfileInfo","isOwner","edit","Object","entries","index","Profile","setUserStatusThunk","setPhotoThunk","usersError","toast","isLoading","style","position","top","textAlign","width","photos","large","image","statusValue","files","upload","ProfileContainer","this","match","params","userID","userInfoId","getUserProfileThunk","getUserStatusThunk","profile","React","mapDispatchToProps","updateUserProfile","updateUserProfileAC","setLoading","setLoadingAC","compose","withAuthRedirect","withRouter","getUsersError","User","followUserHandler","unFollowUserHandler","followingInProgress","to","small","user_avatar","height","followed","disabled","some","uniqueUrlName","Users","totalUsersCount","users","currentPage","pageSize","setCurrentPageHandler","loading","followUserThunk","unFollowUserThunk","getUsers","usersReducer","items","getTotalUsersCount","geCurrentPage","getPageSize","getIsLoading","getFollowingInProgress"],"sourceRoot":""}
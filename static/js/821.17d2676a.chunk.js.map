{"version":3,"file":"static/js/821.17d2676a.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Profile/Profile.module.css?c3df","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?e370","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/posts-selectors.ts","components/Profile/MyPosts/MyPostsContainer.tsx","webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?962c","components/Profile/ProfileInfo/ProfileInfo.tsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://samurai-way/./src/components/Profile/ProfileStatus/ProfileStatus.module.css?77f1","components/Profile/ProfileStatus/ProfileStatus.tsx","components/Profile/Profile.tsx","components/Profile/profile-selectors.ts","components/Profile/ProfileContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Profile_main__H5hgO\",\"content\":\"Profile_content__eXTVx\",\"avatar\":\"Profile_avatar__3EsM6\",\"rightContent\":\"Profile_rightContent__4TrS6\"};","// extracted by mini-css-extract-plugin\nexport default {\"userImage\":\"Post_userImage__6SSHs\",\"postContainer\":\"Post_postContainer__mSOQK\"};","import React from 'react';\r\nimport user from '../../../../img/user.png'\r\n\r\nimport s from './Post.module.css'\r\n\r\ntype PostProps = {\r\n    text: string | undefined\r\n}\r\n\r\nconst Post: React.FC<PostProps> = ({text}) => {\r\n    return (\r\n        <div className={s.postContainer}>\r\n            <img className={s.userImage} src={user} alt=\"user logo\"/>\r\n            <span>{text}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport {PostType,} from '../../../redux/state';\r\nimport Post from './Post/Post';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {maxLength, minLength, required, Textarea} from '../../common/FormControls/FormControls';\r\nimport {Button} from '../../common/Button/Button';\r\n\r\ntype MyPostsProps = {\r\n    addPostHandler: (post: string) => void\r\n    posts: PostType[]\r\n    textarea: string\r\n}\r\n\r\nconst maxLength100 = maxLength(100);\r\nconst minLength2 = minLength(2)\r\n\r\nconst MyPosts: React.FC<MyPostsProps> = ({ addPostHandler, posts }) => {\r\n\r\n    const postsRender = posts.map((item) => {\r\n        return <Post key={item.id} text={item.text}/>\r\n    })\r\n\r\n    const onAddPost = (formData: FormDataType) => {\r\n        addPostHandler(formData.post)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={onAddPost}/>\r\n            <div>\r\n                {postsRender}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype FormDataType = {\r\n    post: string\r\n}\r\n\r\nconst AddPostForm = (props: InjectedFormProps<FormDataType>) => {\r\n    const {handleSubmit} = props;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name=\"post\"\r\n                    component={Textarea}\r\n                    label=\"Add new post\"\r\n                    validate={[required, maxLength100, minLength2]}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <Button>Add post</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm<FormDataType, {}>({\r\n    form: 'post'\r\n})(AddPostForm)\r\n\r\nexport default MyPosts;\r\n","import {RootState} from '../../../redux/reduxStore';\r\n\r\nexport const getPosts = (state: RootState) => {\r\n    return state.profileReducer.posts\r\n}\r\nexport const getTextArea = (state: RootState) => {\r\n    return state.profileReducer.textArea\r\n}\r\n","import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport {addPostAC} from '../../../redux/reducers/profileReducer';\r\nimport {AppDispatch, RootState} from '../../../redux/reduxStore';\r\nimport {connect} from 'react-redux';\r\nimport {PostType} from '../../../redux/state';\r\nimport {getPosts, getTextArea} from './posts-selectors';\r\n\r\ntype MyPostsContainerProps = {\r\n    posts: PostType[]\r\n    textarea: string\r\n    addPostHandler: (post: string) => void\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    posts: PostType[]\r\n    textarea: string\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addPostHandler: (post: string) => void\r\n}\r\n\r\nconst MyPostsContainer: React.FC<MyPostsContainerProps> = ({ posts, textarea, addPostHandler }) => {\r\n\r\n    return (\r\n        <MyPosts\r\n            addPostHandler={addPostHandler}\r\n            posts={posts}\r\n            textarea={textarea}\r\n        />\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): MapStateToPropsType => {\r\n    return {\r\n        posts: getPosts(state),\r\n        textarea: getTextArea(state),\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addPostHandler: (post: string) => dispatch(addPostAC(post))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPostsContainer);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"spanItem\":\"ProfileInfo_spanItem__BL7Hj\",\"contentItem\":\"ProfileInfo_contentItem__4EDAc\"};","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {ProfileStateType} from '../../../redux/reducers/profileReducer';\r\n\r\ntype PropsType = {\r\n    state: ProfileStateType\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({state}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                state.aboutMe\r\n                && <div className={s.contentItem}>\r\n                    <span className={s.spanItem}>About me: </span>\r\n                    {state.aboutMe}\r\n                </div>\r\n            }\r\n            {\r\n                state.fullName &&\r\n                <div className={s.contentItem}>\r\n                    <span className={s.spanItem}>Name: </span>\r\n                    {state.fullName}\r\n                </div>\r\n            }\r\n            {\r\n                state.contacts.vk &&\r\n                <div className={s.contentItem}>\r\n                    <span className={s.spanItem}>Vk: </span>\r\n                    <a href=\"#\">{state.contacts.vk}</a>\r\n                </div>\r\n            }\r\n            {\r\n                state.contacts.youtube &&\r\n                <div className={s.contentItem}>\r\n                            <span\r\n                                className={s.spanItem}>Youtube: </span>\r\n                    {state.contacts.youtube}\r\n                </div>\r\n            }\r\n            {\r\n                state.contacts.website &&\r\n                <div className={s.contentItem}>\r\n                            <span\r\n                                className={s.spanItem}>Website: </span>\r\n                    {state.contacts.website}\r\n                </div>\r\n            }\r\n            {\r\n                state.contacts.twitter &&\r\n                <div className={s.contentItem}>\r\n                            <span\r\n                                className={s.spanItem}>Twitter: </span>\r\n                    {state.contacts.twitter}\r\n                </div>\r\n            }\r\n            {\r\n                state.contacts.github &&\r\n                <div className={s.contentItem}>\r\n                            <span\r\n                                className={s.spanItem}>Github: </span>\r\n                    {state.contacts.github}\r\n                </div>\r\n            }\r\n            {\r\n                state.contacts.mainLink &&\r\n                <div className={s.contentItem}>\r\n                            <span\r\n                                className={s.spanItem}>Main link: </span>\r\n                    {state.contacts.mainLink}\r\n                </div>\r\n            }\r\n            {\r\n                state.contacts.instagram &&\r\n                <div className={s.contentItem}>\r\n                            <span\r\n                                className={s.spanItem}>Instagram: </span>\r\n                    {state.contacts.instagram}\r\n                </div>\r\n            }\r\n            {\r\n                state.contacts.facebook &&\r\n                <div className={s.contentItem}>\r\n                            <span\r\n                                className={s.spanItem}>Facebook: </span>\r\n                    {state.contacts.facebook}\r\n                </div>\r\n            }\r\n            {\r\n                state.lookingForAJob &&\r\n                <div className={s.contentItem}>\r\n                            <span\r\n                                className={s.spanItem}>Looking for a job: </span>{state.lookingForAJob ? 'Yes' : 'No'}\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"ProfileStatus_status__uFXVF\",\"input\":\"ProfileStatus_input__2Aaq0\"};","import React, {useState} from 'react';\r\n\r\nimport s from './ProfileStatus.module.css'\r\n\r\ntype PropsType = {\r\n    status: string\r\n    changeStatus: (statusValue: string) => void\r\n}\r\n\r\nconst ProfileStatus: React.FC<PropsType> = ({status, changeStatus}) => {\r\n    const [editable, setEditable] = useState(false);\r\n    const [value, setValue] = useState(status);\r\n\r\n    const onBlurHandler = () => {\r\n        setEditable(false);\r\n        changeStatus(value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !editable\r\n                    ? <span\r\n                        className={s.status}\r\n                        onClick={() => setEditable(true)}\r\n                    >Status: {status || 'No status 😢'}</span>\r\n                    : <input\r\n                        className={s.input}\r\n                        type=\"text\"\r\n                        value={value}\r\n                        onBlur={onBlurHandler}\r\n                        onChange={(e) => setValue(e.currentTarget.value)}\r\n                        autoFocus\r\n                    />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","import React from 'react';\r\n\r\nimport s from './Profile.module.css'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport {ProfileStateType} from '../../redux/reducers/profileReducer';\r\n\r\nimport image from '../../img/user-avatar.png'\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\n\r\ntype ProfileProps = {\r\n    state: ProfileStateType\r\n    setUserStatusThunk: (status: string) => void\r\n}\r\n\r\nconst Profile: React.FC<ProfileProps> = ({state, setUserStatusThunk}) => {\r\n    const onChangeHandler = (statusValue: string) => {\r\n        setUserStatusThunk(statusValue);\r\n    }\r\n\r\n    return (\r\n        <div className={s.main}>\r\n            {state.isLoading\r\n                ? <div style={{position: 'fixed', top: '10%', textAlign: 'center', width: '64.6%'}}>\r\n                    <Preloader />\r\n                  </div>\r\n                : <div className={s.content}>\r\n                    <div className={s.leftContent}>\r\n                        <img className={s.avatar} src={state.photos.large ? state.photos.large : image} alt=\"avatar\"/>\r\n\r\n                        <MyPostsContainer/>\r\n\r\n                    </div>\r\n                    <div className={s.rightContent}>\r\n                        <ProfileInfo state={state}/>\r\n                        <ProfileStatus status={state.status} changeStatus={onChangeHandler}/>\r\n                    </div>\r\n\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import {RootState} from '../../redux/reduxStore';\r\n\r\nexport const getProfile = (state: RootState) => {\r\n    return state.profileReducer\r\n}\r\nexport const getUserId = (state: RootState) => {\r\n    return state.authReducer.id\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Profile from './Profile';\r\nimport {getUserProfileThunk, ProfileStateType, setLoadingAC, updateUserProfileAC} from '../../redux/reducers/profileReducer';\r\nimport {RootState} from '../../redux/reduxStore';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {GetUserProfileType} from '../../api/api';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {getProfile, getUserId} from './profile-selectors';\r\nimport {getUserStatusThunk, setUserStatusThunk } from '../../redux/reducers/usersReducer';\r\n\r\ntype MapDispatchToPropsType = {\r\n    updateUserProfile: (userResponse: GetUserProfileType) => void\r\n    setLoading: (value: boolean) => void\r\n    getUserProfileThunk: (id: string) => void\r\n    getUserStatusThunk: (userId: string | number) => void\r\n    setUserStatusThunk: (status: string) => void\r\n}\r\ntype MapStateToPropsType = {\r\n    profile: ProfileStateType\r\n    userInfoId: number | null\r\n}\r\ntype PathParamsType = {\r\n    userID: string\r\n}\r\ntype ProfileContainerProps = RouteComponentProps<PathParamsType> & MapDispatchToPropsType & MapStateToPropsType\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerProps> {\r\n    componentDidMount() {\r\n        let userId: number | null = +this.props.match.params.userID!;\r\n        if (!userId) {\r\n            userId = this.props.userInfoId;\r\n        }\r\n\r\n        this.props.getUserProfileThunk(String(userId));\r\n        this.props.getUserStatusThunk(String(userId));\r\n    }\r\n    render() {\r\n        return <Profile state={this.props.profile} setUserStatusThunk={this.props.setUserStatusThunk}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStateToPropsType => {\r\n    return {\r\n        profile: getProfile(state),\r\n        userInfoId: getUserId(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps: MapDispatchToPropsType = {\r\n    updateUserProfile: updateUserProfileAC,\r\n    setLoading: setLoadingAC,\r\n    getUserProfileThunk,\r\n    getUserStatusThunk,\r\n    setUserStatusThunk\r\n}\r\n\r\n//export default withAuthRedirect(connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileContainer)));\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(ProfileContainer)\r\n"],"names":["text","className","s","src","user","alt","maxLength100","maxLength","minLength2","minLength","AddPostReduxForm","reduxForm","form","props","handleSubmit","onSubmit","Field","name","component","Textarea","label","validate","required","Button","addPostHandler","postsRender","posts","map","item","id","formData","post","getPosts","state","profileReducer","getTextArea","textArea","connect","textarea","dispatch","addPostAC","aboutMe","fullName","contacts","vk","href","youtube","website","twitter","github","mainLink","instagram","facebook","lookingForAJob","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","status","changeStatus","useState","editable","setEditable","setValue","type","onBlur","onChange","e","currentTarget","autoFocus","onClick","setUserStatusThunk","isLoading","style","position","top","textAlign","width","Preloader","photos","large","image","statusValue","getProfile","getUserId","authReducer","ProfileContainer","userId","this","match","params","userID","userInfoId","getUserProfileThunk","String","getUserStatusThunk","profile","React","mapDispatchToProps","updateUserProfile","updateUserProfileAC","setLoading","setLoadingAC","compose","withAuthRedirect","withRouter"],"sourceRoot":""}